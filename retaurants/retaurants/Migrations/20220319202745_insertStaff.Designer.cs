// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using restaurants.Data;

namespace restaurants.Migrations
{
    [DbContext(typeof(RestaurantsContext))]
    [Migration("20220319202745_insertStaff")]
    partial class insertStaff
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("restaurants.Data.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2005, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "martisbakery",
                            OwnerName = "Marti",
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2009, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "atasmcdonalds",
                            OwnerName = "Ata",
                            RestaurantId = 2
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2004, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "radisbar",
                            OwnerName = "Radi",
                            RestaurantId = 3
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2003, 1, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ganisdoner",
                            OwnerName = "Gani",
                            RestaurantId = 4
                        });
                });

            modelBuilder.Entity("restaurants.Data.Models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("PortionSize")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = " Black Forest Gateau",
                            PortionSize = 150.0,
                            Price = 5.5,
                            Type = "Cake"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Beer Ice Cream",
                            PortionSize = 150.0,
                            Price = 3.3999999999999999,
                            Type = "Icecream"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Blue Heaven",
                            PortionSize = 100.0,
                            Price = 3.1000000000000001,
                            Type = "Icecream"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Brown Bread",
                            PortionSize = 200.0,
                            Price = 4.4000000000000004,
                            Type = "Icecream"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Chocolate Whip",
                            PortionSize = 300.0,
                            Price = 4.0999999999999996,
                            Type = "Chocolates"
                        },
                        new
                        {
                            Id = 7,
                            Name = "McChicken",
                            PortionSize = 400.0,
                            Price = 8.0,
                            Type = "Burger"
                        },
                        new
                        {
                            Id = 8,
                            Name = "McSpicy",
                            PortionSize = 450.0,
                            Price = 8.0999999999999996,
                            Type = "Burger"
                        },
                        new
                        {
                            Id = 9,
                            Name = "BigMac",
                            PortionSize = 600.0,
                            Price = 10.4,
                            Type = "Burger"
                        },
                        new
                        {
                            Id = 10,
                            Name = "CheeseBurger",
                            PortionSize = 500.0,
                            Price = 9.0,
                            Type = "Burger"
                        },
                        new
                        {
                            Id = 11,
                            Name = "McNuggets",
                            PortionSize = 400.0,
                            Price = 8.0,
                            Type = "nuggets"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Mojito",
                            PortionSize = 100.0,
                            Price = 10.0,
                            Type = "Cocktail"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Martini",
                            PortionSize = 90.0,
                            Price = 12.0,
                            Type = "Cocktail"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Cuba Libre",
                            PortionSize = 80.0,
                            Price = 10.0,
                            Type = "Cocktail"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Gin Tonic",
                            PortionSize = 95.0,
                            Price = 11.0,
                            Type = "Cocktail"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Sex On The Beach",
                            PortionSize = 110.0,
                            Price = 12.0,
                            Type = "Cocktail"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Durum Doner",
                            PortionSize = 300.0,
                            Price = 4.2999999999999998,
                            Type = "Doner"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Ekmek Doner",
                            PortionSize = 340.0,
                            Price = 5.0999999999999996,
                            Type = "Doner"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Tabak Doner",
                            PortionSize = 420.0,
                            Price = 6.0,
                            Type = "Doner"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Iskender Doner",
                            PortionSize = 380.0,
                            Price = 6.0,
                            Type = "Doner"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Lahmacun",
                            PortionSize = 210.0,
                            Price = 3.5,
                            Type = "pide"
                        });
                });

            modelBuilder.Entity("restaurants.Data.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Language = "bulgarian",
                            Link = "https://martisbakery/PinchOfSalt/menu.com",
                            Rating = 9.0,
                            Type = "Dessert"
                        },
                        new
                        {
                            Id = 2,
                            Language = "english",
                            Link = "https://atasmcdonalds/HaskovoMcDonald/menu.com",
                            Rating = 8.0,
                            Type = "Fast Food"
                        },
                        new
                        {
                            Id = 3,
                            Language = "spanish",
                            Link = "https://radisbar/Sense/menu.com",
                            Rating = 8.4000000000000004,
                            Type = "Cocktail"
                        },
                        new
                        {
                            Id = 4,
                            Language = "turkish",
                            Link = "https://ganisdoner/HisarDoner/menu.com",
                            Rating = 9.5,
                            Type = "Fast Food"
                        });
                });

            modelBuilder.Entity("restaurants.Data.Models.MenuMeal", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "MealId");

                    b.HasIndex("MealId");

                    b.ToTable("MenuMeals");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            MealId = 1
                        },
                        new
                        {
                            MenuId = 1,
                            MealId = 3
                        },
                        new
                        {
                            MenuId = 1,
                            MealId = 4
                        },
                        new
                        {
                            MenuId = 1,
                            MealId = 5
                        },
                        new
                        {
                            MenuId = 1,
                            MealId = 6
                        },
                        new
                        {
                            MenuId = 2,
                            MealId = 7
                        },
                        new
                        {
                            MenuId = 2,
                            MealId = 8
                        },
                        new
                        {
                            MenuId = 2,
                            MealId = 9
                        },
                        new
                        {
                            MenuId = 2,
                            MealId = 10
                        },
                        new
                        {
                            MenuId = 2,
                            MealId = 11
                        },
                        new
                        {
                            MenuId = 3,
                            MealId = 12
                        },
                        new
                        {
                            MenuId = 3,
                            MealId = 13
                        },
                        new
                        {
                            MenuId = 3,
                            MealId = 14
                        },
                        new
                        {
                            MenuId = 3,
                            MealId = 15
                        },
                        new
                        {
                            MenuId = 3,
                            MealId = 16
                        },
                        new
                        {
                            MenuId = 4,
                            MealId = 17
                        },
                        new
                        {
                            MenuId = 4,
                            MealId = 18
                        },
                        new
                        {
                            MenuId = 4,
                            MealId = 19
                        },
                        new
                        {
                            MenuId = 4,
                            MealId = 20
                        },
                        new
                        {
                            MenuId = 4,
                            MealId = 21
                        });
                });

            modelBuilder.Entity("restaurants.Data.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 50,
                            Link = "https://martisbakery/PinchOfSalt.com",
                            Location = "Haskovo",
                            MenuId = 1,
                            Name = "PinchOfSalt"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 40,
                            Link = "https://atasmcdonalds/HaskovoMcDonald.com",
                            Location = "Haskovo",
                            MenuId = 2,
                            Name = "HaskovoMcDonald"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 200,
                            Link = "https://radisbar/Sense.com",
                            Location = "Barcelona",
                            MenuId = 3,
                            Name = "Sense"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 30,
                            Link = "https://ganisdoner/HisarDoner.com",
                            Location = "Istanbul",
                            MenuId = 4,
                            Name = "HisarDoner"
                        });
                });

            modelBuilder.Entity("restaurants.Data.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Age")
                        .HasColumnType("float");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Job")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 28.0,
                            FirstName = "Samuel",
                            Job = "Chef",
                            LastName = "Umtiti",
                            Salary = 900.0
                        },
                        new
                        {
                            Id = 2,
                            Age = 30.0,
                            FirstName = "Martin",
                            Job = "Waiter",
                            LastName = "Braithwaite",
                            Salary = 600.0
                        },
                        new
                        {
                            Id = 3,
                            Age = 23.0,
                            FirstName = "Kylian",
                            Job = "Chef",
                            LastName = "Mbappe",
                            Salary = 1000.0
                        },
                        new
                        {
                            Id = 4,
                            Age = 21.0,
                            FirstName = "Erling",
                            Job = "Waiter",
                            LastName = "Halland",
                            Salary = 800.0
                        },
                        new
                        {
                            Id = 5,
                            Age = 34.0,
                            FirstName = "Lionel",
                            Job = "Bartender",
                            LastName = "Messi",
                            Salary = 1100.0
                        },
                        new
                        {
                            Id = 6,
                            Age = 35.0,
                            FirstName = "Luis",
                            Job = "Waiter",
                            LastName = "Suarez",
                            Salary = 800.0
                        },
                        new
                        {
                            Id = 7,
                            Age = 35.0,
                            FirstName = "Sergio",
                            Job = "Dunerman",
                            LastName = "Ramos",
                            Salary = 1000.0
                        },
                        new
                        {
                            Id = 8,
                            Age = 30.0,
                            FirstName = "Carlos",
                            Job = "Waiter",
                            LastName = "Casemiro",
                            Salary = 700.0
                        });
                });

            modelBuilder.Entity("restaurants.Data.Models.StaffRestaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("RestaurantId", "StaffId");

                    b.HasIndex("StaffId");

                    b.ToTable("StaffRestaurants");
                });

            modelBuilder.Entity("restaurants.Data.Models.Company", b =>
                {
                    b.HasOne("restaurants.Data.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("restaurants.Data.Models.MenuMeal", b =>
                {
                    b.HasOne("restaurants.Data.Models.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("restaurants.Data.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("restaurants.Data.Models.Restaurant", b =>
                {
                    b.HasOne("restaurants.Data.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("restaurants.Data.Models.StaffRestaurant", b =>
                {
                    b.HasOne("restaurants.Data.Models.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("restaurants.Data.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
